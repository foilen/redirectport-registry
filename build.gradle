buildscript {
  ext {
    springBootVersion = '2.3.2.RELEASE'
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
  }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.foilen'
version = System.getenv('VERSION')?:'master-SNAPSHOT'

repositories {
  mavenLocal()
  jcenter()
  mavenCentral()
}

sourceCompatibility = 1.11

eclipse {
  classpath {
    downloadSources = true
    downloadJavadoc = true
  }
}

dependencies {

  // Spring
 // compile "org.springframework:spring-context"
  compile "org.springframework.boot:spring-boot-starter"

  // Logging
  compile "ch.qos.logback:logback-core"
  compile "ch.qos.logback:logback-classic"
  compile "org.slf4j:slf4j-api"
  compile "org.slf4j:jcl-over-slf4j"

  // Networking
  compile "com.madgag.spongycastle:prov:$spongycastleVersion"
  compile "com.madgag.spongycastle:pkix:$spongycastleVersion"
  compile "com.madgag.spongycastle:pg:$spongycastleVersion"
  compile "io.netty:netty-all:$nettyVersion"
  compile 'org.javassist:javassist:3.27.0-GA'

  // JSON
  compile "com.fasterxml.jackson.core:jackson-databind"

  // Misc
  compile "args4j:args4j:$argsVersion"
  compile 'com.google.guava:guava:29.0-jre'
  compile "com.foilen:jl-incubator:$smalltoolsVersion"
  compile "com.foilen:jl-smalltools:$smalltoolsVersion"
  compile "javax.xml.bind:jaxb-api:2.3.1"

  // Test
  testCompile 'junit:junit'
  testCompile "org.springframework.boot:spring-boot-starter-test"

}

bootJar {
  classifier = 'boot'
}
